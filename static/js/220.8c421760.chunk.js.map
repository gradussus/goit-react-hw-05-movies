{"version":3,"file":"static/js/220.8c421760.chunk.js","mappings":"sKAAO,IAAMA,EAAM,kC,sKCGNC,EAAO,mCAAG,WAAMC,GAAN,iFACRC,EAAAA,EAAAA,IAAA,6CACgCD,EADhC,oBAC8CF,EAAAA,IACxDI,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAHO,mFAAH,sD,2BCAPG,EAASC,EAAAA,GAAAA,IAAH,0DAINC,EAAQD,EAAAA,GAAAA,GAAH,sBAELE,EAAOF,EAAAA,GAAAA,IAAH,0CAIJG,EAAgBH,EAAAA,GAAAA,IAAH,0CAGbI,EAAiBJ,EAAAA,GAAAA,IAAH,qEAIdK,EAAQL,EAAAA,GAAAA,GAAH,4CAGLM,GAAON,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,mP,SCoFjB,EA1FqB,WAAO,IAAD,EACjBQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,YAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAEQC,GAAUC,EAAAA,EAAAA,MAAVD,MAEFE,EAAI,iBAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAOE,YAAV,QAAkB,IAkB5B,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IACEJ,EAAU,WACVtB,EAAQgB,GAASW,MAAK,SAAAC,GACfA,IAGLN,EAAU,WACVF,EAAgBQ,EAAKA,MACtB,GAIF,CAHC,MAAOxB,GACPC,QAAQC,IAAIF,GACZkB,EAAU,QACX,CACF,GAAE,CAACN,KAGF,gCACc,YAAXK,IAAwB,SAACQ,EAAA,EAAD,IACb,UAAXR,IACC,gCACG,KACD,qDACA,SAACP,EAAD,CAAMgB,GAAIL,EAAV,qBAGQ,YAAXJ,IACC,iCACE,UAACX,EAAD,YACE,UAACC,EAAD,YACE,SAACG,EAAD,CAAMgB,GAAIL,EAAV,UAEI,iCACE,iCACA,iCACA,iCACA,sCAIN,SAAClB,EAAD,CACEwB,IAAG,8CAAyCZ,EAAaa,aACzDC,IAAI,eAGR,UAACrB,EAAD,YACE,SAACH,EAAD,UACGU,EAAae,MAAb,KAECf,EAAagB,aAAaC,MAAM,EAAG,GAFpC,OAKH,wCAAgBjB,EAAakB,cAAgB,eAC7C,sCACA,uBAAIlB,EAAamB,UAAY,iBAC7B,oCACA,wBACGnB,EAAaoB,OAAOC,KAAI,gBAAGvC,EAAH,EAAGA,GAAIwC,EAAP,EAAOA,KAAP,OACvB,UAAC5B,EAAD,eAAkB4B,EAAlB,MAAYxC,EADW,KAEnB,0BAIZ,mBACA,oDACA,2BACE,yBACE,SAAC,KAAD,CAAM6B,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAY,SAAD,WACE,SAAC,KAAD,WAMX,C","sources":["components/API/KEY.jsx","components/API/getByID.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["export const KEY = '5d44c33850258a6ea050e461474b1468';\n","import { KEY } from './KEY';\nimport axios from 'axios';\n\nexport const getByID = async id => {\n  return await axios\n    .get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`)\n    .catch(error => console.log(error));\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Poster = styled.img`\n  width: 450px;\n  margin: 20px;\n`;\nexport const Title = styled.h1``;\n\nexport const Card = styled.div`\n  display: flex;\n`;\n\nexport const MovieCardLeft = styled.div`\n  display: flex;\n`;\nexport const MovieCardRight = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const Genre = styled.li`\n  display: inline;\n`;\nexport const Back = styled(Link)`\n  padding: 5px;\n  border: 1px tomato solid;\n  border-radius: 10px;\n  text-decoration: none;\n  font-size: 64px;\n  display: flex;\n  flex-wrap: wrap;\n  align-content: center;\n  height: 300px;\n  margin-top: 20px;\n`;\n","import { Suspense, useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { getByID } from 'components/API/getByID';\nimport { Loader } from 'components/Loader';\n\nimport {\n  Poster,\n  Title,\n  MovieCardLeft,\n  MovieCardRight,\n  Card,\n  Genre,\n  Back,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieID } = useParams();\n  const [currentMovie, setCurrentMovie] = useState();\n  const [status, setStatus] = useState('idle');\n\n  const { state } = useLocation();\n\n  const from = state?.from ?? '/';\n\n  useEffect(() => {\n    try {\n      setStatus('pending');\n      getByID(movieID).then(data => {\n        if (!data) {\n          return;\n        }\n        setStatus('success');\n        setCurrentMovie(data.data);\n      });\n    } catch (error) {\n      console.log(error);\n      setStatus('error');\n    }\n  }, [movieID]);\n\n  return (\n    <>\n      {status === 'pending' && <Loader />}\n      {status === 'error' && (\n        <>\n          {' '}\n          <div>Sorry, something wrong</div>\n          <Back to={from}>Back</Back>\n        </>\n      )}\n      {status === 'success' && (\n        <>\n          <Card>\n            <MovieCardLeft>\n              <Back to={from}>\n                {\n                  <>\n                    <span>B</span>\n                    <span>A</span>\n                    <span>C</span>\n                    <span>K</span>\n                  </>\n                }\n              </Back>\n              <Poster\n                src={`https://image.tmdb.org/t/p/original/${currentMovie.poster_path}`}\n                alt=\"poster\"\n              />\n            </MovieCardLeft>\n            <MovieCardRight>\n              <Title>\n                {currentMovie.title +\n                  ` (` +\n                  currentMovie.release_date.slice(0, 4) +\n                  `)`}\n              </Title>\n              <p>User score: {currentMovie.vote_average || 'No score'}</p>\n              <h2>Overview</h2>\n              <p>{currentMovie.overview || 'No overview'}</p>\n              <h3>Genres</h3>\n              <ul>\n                {currentMovie.genres.map(({ id, name }) => (\n                  <Genre key={id}> {name} </Genre>\n                )) || 'No genres info'}\n              </ul>\n            </MovieCardRight>\n          </Card>\n          <hr></hr>\n          <h4>Additional information</h4>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <Suspense>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["KEY","getByID","id","axios","catch","error","console","log","Poster","styled","Title","Card","MovieCardLeft","MovieCardRight","Genre","Back","Link","movieID","useParams","useState","currentMovie","setCurrentMovie","status","setStatus","state","useLocation","from","useEffect","then","data","Loader","to","src","poster_path","alt","title","release_date","slice","vote_average","overview","genres","map","name","Suspense"],"sourceRoot":""}