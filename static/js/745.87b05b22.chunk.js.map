{"version":3,"file":"static/js/745.87b05b22.chunk.js","mappings":"sKAAO,IAAMA,EAAM,kC,6HCGNC,EAAU,mCAAG,WAAMC,GAAN,iFAGhBC,EAAAA,EAAAA,IAAA,4DAEmDH,EAAAA,EAFnD,iCAE+EE,EAF/E,yBAIHE,OAAM,SAAAC,GACL,OAAOC,QAAQC,IAAIF,EACpB,IATmB,uCAUtBG,KAAKC,SAViB,2CAAH,sD,6CCiFvB,EA9Ee,WAAO,IAAD,EACnB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,QAArC,eAAOK,EAAP,KAAeC,EAAf,KAEMjB,EAAK,UAAGS,EAAaS,IAAI,gBAApB,QAAgC,IAC3CC,EAAAA,EAAAA,YAAU,WACJnB,IACFI,QAAQC,IAAI,UACZD,QAAQC,IAAIL,GAEZD,EAAWC,GAAOoB,KAAKL,GACvBE,EAAU,WACVJ,EAAeb,GAElB,GAAE,CAACA,IAEJ,IAAMqB,GAAWC,EAAAA,EAAAA,MA2BjB,OACE,6BACE,kBAAMC,SAvBW,SAAAC,GAEnB,GADAA,EAAEC,iBACgC,IAA9Bb,EAAYc,OAAOC,OAGrB,OAFAC,OAAOC,MAAP,sDACAhB,EAAe,IAGjBH,EAAgB,CAAEV,MAAOY,IACzBK,EAAU,WACVlB,EAAWa,GAAaQ,MAAK,SAAAd,GAC3B,GAAoB,IAAhBA,EAAKqB,OAGP,OAFAjB,EAAgB,CAAC,GACjBO,EAAU,UACHb,QAAQC,IAAI,UAErBU,EAAYT,GACZW,EAAU,UACX,IACDJ,EAAe,GAChB,EAIG,WACE,kBACEiB,MAAOlB,EACPmB,SA9BkB,SAAAP,GACxBX,EAAeW,EAAEQ,cAAcF,MAAMG,cACtC,EA6BOC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,kBAEd,mBAAQH,KAAK,SAAb,UACE,0CAGQ,YAAXlB,IAAwB,SAACsB,EAAA,EAAD,IACb,SAAXtB,IAAqB,oDACV,WAAXA,IAAuB,oEACZ,YAAXA,IACC,wBACGF,EAASyB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,cAAd,OACZ,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMxB,GAA1C,SACGoB,GAASC,KAFLF,EADG,QAWvB,C","sources":["components/API/KEY.jsx","components/API/getByQuery.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["export const KEY = '5d44c33850258a6ea050e461474b1468';\n","import { KEY } from './KEY';\nimport axios from 'axios';\n\nexport const getByQuery = async query => {\n  //   console.log(query);\n  return (\n    await axios\n      .get(\n        `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${query}&include_adult=false`\n      )\n      .catch(error => {\n        return console.log(error);\n      })\n  ).data.results;\n};\n","import { getByQuery } from 'components/API/getByQuery';\nimport { Loader } from 'components/Loader';\nimport { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [queryArr, setQueryArr] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  const query = searchParams.get('query') ?? '';\n  useEffect(() => {\n    if (query) {\n      console.log('effect');\n      console.log(query);\n\n      getByQuery(query).then(setQueryArr);\n      setStatus('success');\n      setSearchQuery(query);\n    }\n  }, [query]);\n\n  const location = useLocation();\n\n  const handleQueryChange = e => {\n    setSearchQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim().length === 0) {\n      window.alert(`Please enter a request. Spaces does not count`);\n      setSearchQuery('');\n      return;\n    }\n    setSearchParams({ query: searchQuery });\n    setStatus('pending');\n    getByQuery(searchQuery).then(data => {\n      if (data.length === 0) {\n        setSearchParams({});\n        setStatus('noInfo');\n        return console.log('noInfo');\n      }\n      setQueryArr(data);\n      setStatus('success');\n    });\n    setSearchQuery('');\n  };\n\n  return (\n    <main>\n      <form onSubmit={handleSubmit}>\n        <input\n          value={searchQuery}\n          onChange={handleQueryChange}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search films\"\n        />\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n      </form>\n      {status === 'pending' && <Loader />}\n      {status === 'idle' && <div> You can find any film</div>}\n      {status === 'noInfo' && <div>Sorry, we have no films for this query</div>}\n      {status === 'success' && (\n        <ul>\n          {queryArr.map(({ id, title, original_name }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title || original_name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","getByQuery","query","axios","catch","error","console","log","data","results","useSearchParams","searchParams","setSearchParams","useState","searchQuery","setSearchQuery","queryArr","setQueryArr","status","setStatus","get","useEffect","then","location","useLocation","onSubmit","e","preventDefault","trim","length","window","alert","value","onChange","currentTarget","toLowerCase","type","autoComplete","autoFocus","placeholder","Loader","map","id","title","original_name","to","state","from"],"sourceRoot":""}