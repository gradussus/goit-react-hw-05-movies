{"version":3,"file":"static/js/964.c484b59e.chunk.js","mappings":"sKAAO,IAAMA,EAAM,kC,qJCGNC,EAAO,mCAAG,WAAMC,GAAN,iFAEbC,EAAAA,EAAAA,IAAA,6CAEoCD,EAFpC,4BAE0DF,EAAAA,EAF1D,oBAIHI,OAAM,SAAAC,GACL,OAAOC,QAAQC,IAAIF,EACpB,IARgB,uCASnBG,KAAKC,MATc,2CAAH,sD,2BCDPC,EAAMC,EAAAA,GAAAA,IAAH,2DAIHC,EAAWD,EAAAA,GAAAA,GAAH,wGAMRE,EAAOF,EAAAA,GAAAA,GAAH,yC,kBC4CjB,EA/Ca,WACX,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOP,EAAP,KAAaQ,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IACED,EAAU,WACVlB,EAAQa,GAASO,MAAK,SAAAZ,GACpBQ,EAAQR,GACRU,EAAU,UACX,GAGF,CAFC,MAAOd,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACS,KAEF,iCACE,kBACY,YAAXI,IAAwB,SAACI,EAAA,EAAD,IACb,YAAXJ,IACC,SAACN,EAAD,UACGH,EAAKc,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWxB,EAAlC,EAAkCA,GAAlC,OACR,UAACW,EAAD,YACE,SAACH,EAAD,CACEiB,IACEH,EAAY,6CAC8BA,GACtCI,EAENC,IAAI,qBAGN,0BACE,mCAAWJ,EAAX,OAAsB,QAExB,wBACE,wCAAgBC,SAdTxB,EADH,QAuBnB,C","sources":["components/API/KEY.jsx","components/API/getCast.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["export const KEY = '5d44c33850258a6ea050e461474b1468';\n","import { KEY } from './KEY';\nimport axios from 'axios';\n\nexport const getCast = async id => {\n  return (\n    await axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n      )\n      .catch(error => {\n        return console.log(error);\n      })\n  ).data.cast;\n};\n","import styled from 'styled-components';\n\nexport const Img = styled.img`\n  width: 250px;\n  height: 375px;\n`;\nexport const CastList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\nexport const Card = styled.li`\n  width: 250px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getCast } from 'components/API/getCast';\nimport { Loader } from 'components/Loader';\n\nimport { CastList, Img, Card } from './Cast.styled';\nimport placeholder from './placeholdeCast.jpg';\n\nconst Cast = () => {\n  const { movieID } = useParams();\n  const [cast, setCast] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    try {\n      setStatus('pending');\n      getCast(movieID).then(cast => {\n        setCast(cast);\n        setStatus('success');\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieID]);\n  return (\n    <>\n      <hr></hr>\n      {status === 'pending' && <Loader />}\n      {status === 'success' && (\n        <CastList>\n          {cast.map(({ profile_path, name, character, id }) => (\n            <Card key={id}>\n              <Img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/original${profile_path}`\n                    : placeholder\n                }\n                alt=\"character-photo\"\n              />\n\n              <p>\n                <b> Name: {name} </b>{' '}\n              </p>\n              <p>\n                <u> Character: {character}</u>\n              </p>\n            </Card>\n          ))}\n        </CastList>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["KEY","getCast","id","axios","catch","error","console","log","data","cast","Img","styled","CastList","Card","movieID","useParams","useState","setCast","status","setStatus","useEffect","then","Loader","map","profile_path","name","character","src","placeholder","alt"],"sourceRoot":""}