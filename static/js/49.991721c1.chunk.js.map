{"version":3,"file":"static/js/49.991721c1.chunk.js","mappings":"qKAAO,IAAMA,EAAM,kC,8ICGNC,EAAU,mCAAG,WAAMC,GAAN,iFAEhBC,EAAAA,EAAAA,IAAA,6CAEoCD,EAFpC,4BAE0DF,EAAAA,EAF1D,oBAIHI,OAAM,SAAAC,GACL,OAAOC,QAAQC,IAAIF,EACpB,IARmB,uCAStBG,KAAKC,SATiB,2CAAH,sD,kBC0CvB,EAvCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,QAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IACEH,EAAU,WACVb,EAAWS,GAASQ,MAAK,SAAAH,GACvBC,EAAWD,GACXD,EAAU,WACa,IAAnBC,EAAQI,QACVL,EAAU,SAEb,GAGF,CAFC,MAAOT,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACK,KAGF,iCACE,kBACY,YAAXG,IAAwB,SAACO,EAAA,EAAD,IACb,WAAXP,IAAuB,kDACZ,YAAXA,IACC,wBACGE,EAAQM,KAAI,gBAAGnB,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACX,2BACE,wBAAKA,KACL,uBAAID,MAFGpB,EADE,QAUtB,C","sources":["components/API/KEY.jsx","components/API/getReviews.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["export const KEY = '5d44c33850258a6ea050e461474b1468';\n","import { KEY } from './KEY';\nimport axios from 'axios';\n\nexport const getReviews = async id => {\n  return (\n    await axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n      )\n      .catch(error => {\n        return console.log(error);\n      })\n  ).data.results;\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { getReviews } from 'components/API/getReviews';\nimport { Loader } from 'components/Loader';\n\nconst Reviews = () => {\n  const { movieID } = useParams();\n  const [status, setStatus] = useState('idle');\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    try {\n      setStatus('pending');\n      getReviews(movieID).then(reviews => {\n        setReviews(reviews);\n        setStatus('success');\n        if (reviews.length === 0) {\n          setStatus('noInfo');\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieID]);\n\n  return (\n    <>\n      <hr></hr>\n      {status === 'pending' && <Loader />}\n      {status === 'noInfo' && <p>Sorry, no reviews, yet</p>}\n      {status === 'success' && (\n        <ul>\n          {reviews.map(({ id, content, author }) => (\n            <li key={id}>\n              <h5>{author}</h5>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["KEY","getReviews","id","axios","catch","error","console","log","data","results","movieID","useParams","useState","status","setStatus","reviews","setReviews","useEffect","then","length","Loader","map","content","author"],"sourceRoot":""}